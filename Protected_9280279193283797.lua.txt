local Player = game.Players.LocalPlayer
local Character = Player.Character or Player.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local Camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")

local RimModel = workspace.Important.Court1.Hoops.Hoop2.Rim.RimModel

local PCArcValues = {
    [59] = 30, [60] = 30, [61] = 30, [62] = 30,
    [63] = 28, [64] = 28, [65] = 28,
    [66] = 25, [67] = 25,
    [68] = 23, [69] = 23,
    [70] = 20, [71] = 20,
    [72] = 18
}

local function HasBasketball()
    return Character and Character:FindFirstChild("Basketball")
end

local function ExecuteMobileCamlock()
    if not HasBasketball() then return end

    local playerPos = Character.HumanoidRootPart.Position
    local hoopPos = RimModel.Position
    local distance = math.floor((playerPos - hoopPos).Magnitude)
    if distance > 73 then return end

    local arc = PCArcValues[distance] or 20
    local basketPos = hoopPos + Vector3.new(0, arc, 0)

    Camera.CFrame = CFrame.new(Character.HumanoidRootPart.Position + Vector3.new(0, 2, 0), basketPos)
end

Humanoid.StateChanged:Connect(function(_, newState)
    if newState == Enum.HumanoidStateType.Jumping then
        ExecuteMobileCamlock()
        UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter
    elseif newState == Enum.HumanoidStateType.Freefall or newState == Enum.HumanoidStateType.Landed then
        UserInputService.MouseBehavior = Enum.MouseBehavior.Default
    end
end)
